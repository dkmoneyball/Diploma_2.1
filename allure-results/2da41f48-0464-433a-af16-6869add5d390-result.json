{"name": "test_create_order_without_authorization", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 401, got 200\nassert 200 == 401\n +  where 200 = <Response [200]>.status_code", "trace": "self = <test_order_creation.TestOrderCreation object at 0x110256ed0>\ningredient_ids = ['61c0c5a71d1f82001bdaaa6d', '61c0c5a71d1f82001bdaaa6f', '61c0c5a71d1f82001bdaaa70', '61c0c5a71d1f82001bdaaa71', '61c0c5a71d1f82001bdaaa72', '61c0c5a71d1f82001bdaaa6e', ...]\n\n    def test_create_order_without_authorization(self, ingredient_ids):\n        \"\"\"Тест создания заказа без авторизации, но с ингредиентами.\"\"\"\n        order_data = {\"ingredients\": ingredient_ids[:2]}\n    \n        response = requests.post(CREATE_ORDER_URL, json=order_data)\n    \n>       assert response.status_code == 401, f\"Expected 401, got {response.status_code}\"\nE       AssertionError: Expected 401, got 200\nE       assert 200 == 401\nE        +  where 200 = <Response [200]>.status_code\n\ntests/test_order_creation.py:45: AssertionError"}, "description": "Тест создания заказа без авторизации, но с ингредиентами.", "start": 1730469054504, "stop": 1730469055134, "uuid": "336bcf32-cff4-41de-97f9-b925a6890e2c", "historyId": "5ad9f4932bbe0cdad12e96295c7410dd", "testCaseId": "5ad9f4932bbe0cdad12e96295c7410dd", "fullName": "tests.test_order_creation.TestOrderCreation#test_create_order_without_authorization", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_creation"}, {"name": "subSuite", "value": "TestOrderCreation"}, {"name": "host", "value": "MacBook-Pro-Daniil.local"}, {"name": "thread", "value": "8281-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_creation"}]}